CCS PCM C Compiler, Version 5.108Pd, 1               03-set-22 02:22
Compiler operating in Evaluation Mode
To obtain a fully enabled compiler visit www.ccsinfo.com/products

               Filename:   C:\Users\bruno\OneDrive\Documentos\MPLABXProjects\BLINK_LED_PIC16F628A_CCS.X\build\default\production\main.lst

               ROM used:   48 words (2%)
                           Largest free fragment is 2000
               RAM used:   6 (3%) at main() level
                           7 (3%) worst case
               Stack used: 0 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   019
0003:  NOP
.................... /*
....................  * File:   main.c
....................  * Author: bruno
....................  *
....................  * Created on 3 de Setembro de 2022, 02:06
....................  */
.................... 
.................... 
.................... #include <16F628A.h>
.................... //////////// Standard Header file for the PIC16F628A device ////////////////
.................... ///////////////////////////////////////////////////////////////////////////
.................... ////        (C) Copyright 1996, 2020 Custom Computer Services          ////
.................... //// This source code may only be used by licensed users of the CCS C  ////
.................... //// compiler.  This source code may only be distributed to other      ////
.................... //// licensed users of the CCS C compiler.  No other use, reproduction ////
.................... //// or distribution is permitted without written permission.          ////
.................... //// Derivative programs created using this software in object code    ////
.................... //// form are not restricted in any way.                               ////
.................... ///////////////////////////////////////////////////////////////////////////
.................... #device PIC16F628A
.................... 
.................... #list
.................... 
.................... 
.................... #fuses INTRC_IO NOMCLR
.................... 
.................... #use delay(clock=4000000)
0004:  MOVLW  22
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   018
000A:  MOVLW  01
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  4A
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  GOTO   016
0016:  DECFSZ 00,F
0017:  GOTO   00A
0018:  GOTO   02C (RETURN)
.................... 
.................... #define LED PIN_B0
.................... #define TEMPO 500
.................... 
.................... void main(void) {
0019:  MOVF   03,W
001A:  ANDLW  1F
001B:  MOVWF  03
001C:  BSF    03.5
001D:  BSF    0E.3
001E:  MOVLW  07
001F:  BCF    03.5
0020:  MOVWF  1F
0021:  BCF    03.7
....................     while(TRUE) {
....................         output_toggle(LED);
0022:  BSF    03.5
0023:  BCF    06.0
0024:  MOVLW  01
0025:  BCF    03.5
0026:  XORWF  06,F
....................         delay_ms(TEMPO);
0027:  MOVLW  02
0028:  MOVWF  21
0029:  MOVLW  FA
002A:  MOVWF  22
002B:  GOTO   004
002C:  DECFSZ 21,F
002D:  GOTO   029
002E:  GOTO   022
....................     }
.................... }
002F:  SLEEP

Configuration Fuses:
   Word  1: 3F50   NOWDT PUT INTRC_IO NOMCLR BROWNOUT NOLVP NOCPD NOPROTECT
